<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>local.tellis</groupId>
	<artifactId>sftpserver-forked</artifactId>
	<version>1.2.3</version>
	<description>
		SFTP Server (SSH File Transfer Protocol); forked from https://github.com/ggrandes/sftpserver to https://github.com/tbellisiv-mediware/sftpserver.
		Changes:
			- Added support for simulating timeouts.
			- Added Windows scripts.
			- Added maven goal for building binary distributions with all dependencies.
			- Added maven goal to generate configuration files from template using a simple properties file
	</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<target.dist.dir>target/dist</target.dist.dir>
		<dist.home.dir>${project.basedir}/target/dist</dist.home.dir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.mina</groupId>
			<artifactId>mina-core</artifactId>
			<!--<version>2.0.16</version>-->
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.sshd</groupId>
			<artifactId>sshd-core</artifactId>
			<!--<version>1.2.0</version>-->
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.sshd</groupId>
			<artifactId>sshd-scp</artifactId>
			<!--<version>1.2.0</version>-->
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.sshd</groupId>
			<artifactId>sshd-sftp</artifactId>
			<!--<version>1.2.0</version>-->
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.59</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>1.59</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jzlib</artifactId>
			<version>1.1.3</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- Package Classes to JAR to upload to repo -->
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<forceCreation>true</forceCreation>
					<archive>
						<manifestEntries>
							<Built-By>maven</Built-By>
						</manifestEntries>
					</archive>
					<excludes>
						<exclude>**/pom.properties</exclude>
						<exclude>**/sftpd.properties</exclude>
						<exclude>**/hostkey.*</exclude>
						<exclude>**/sandbox/*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Package source to JAR to upload to repo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<archive>
								<manifestEntries>
									<Built-By>maven</Built-By>
								</manifestEntries>
							</archive>
							<excludeResources>true</excludeResources>
							<excludes>
								<exclude>**/sandbox/*</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Package ZIP to upload to repo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptor>assembly/package.xml</descriptor>
					<finalName>${project.artifactId}-${project.version}</finalName>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Tellis: Collect all lib dependencies into a folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-dependencies-lib</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/lib</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
					<execution>
						<id>dist-copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${target.dist.dir}/lib</outputDirectory>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
					<execution>
						<id>dist-copy-artifact</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>local.tellis</groupId>
									<artifactId>sftpserver-forked</artifactId>
									<version>${project.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>${target.dist.dir}/lib</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Tellis: Copy the artifact, third-party libs, scripts and other resources into a 'dist' folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>dist-copy-linux-scripts</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${target.dist.dir}/bin/linux</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/linux</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>dist-copy-windows-scripts</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${target.dist.dir}/bin/windows</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/windows</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>dist-copy-conf</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${target.dist.dir}/conf</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/sampleconf</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>dist-copy-keys</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${target.dist.dir}/keys</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/samplekeys</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<properties>
								<usersDir>${target.dist.dir}/users/test</usersDir>
								<logDir>${target.dist.dir}/logs</logDir>
							</properties>
							<source>
								def usersDir = new File(properties['usersDir'])
								if (!usersDir.exists())
								{
									log.info('Creating folder {}',properties['usersDir'].replace("\\", "/"))
									usersDir.mkdirs()
								}

								def logDir = new File(properties['logDir'])
								if (!logDir.exists())
								{
									log.info('Creating folder {}',properties['logDir'].replace("\\", "/"))
									logDir.mkdirs()
								}
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7.1</version>
			</plugin>
		</plugins>

		<!-- Deployment Maven-S3 -->
		<extensions>
			<extension>
				<groupId>org.springframework.build</groupId>
				<artifactId>aws-maven</artifactId>
				<version>5.0.0.RELEASE</version>
			</extension>
		</extensions>
	</build>

	<!-- Deployment -->
	<distributionManagement>
		<repository>
			<name>S3 Release Repository</name>
			<id>maven-s3-release-repo</id>
			<url>s3://maven-release/release</url>
		</repository>
		<snapshotRepository>
			<name>S3 Snapshot Repository</name>
			<id>maven-s3-snapshot-repo</id>
			<url>s3://maven-snapshot/snapshot</url>
		</snapshotRepository>
	</distributionManagement>
</project>